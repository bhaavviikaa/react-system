{"ast":null,"code":"// Define Redux actions for employee management\n\nimport { createAction } from '@reduxjs/toolkit';\nconst employeeSlice = createSlice({\n  name: 'employee',\n  initialState: [],\n  reducers: {\n    addEmployee: (state, action) => {\n      state.push(action.payload);\n    }\n    // Add other actions as needed\n  }\n});\nexport const addEmployee = createAction('employee/add');\nexport default employeeSlice.reducer;","map":{"version":3,"names":["createAction","employeeSlice","createSlice","name","initialState","reducers","addEmployee","state","action","push","payload","reducer"],"sources":["C:/Users/Bhavika/Desktop/react-blog/react-blog/frontend/src/actions/employeeActions.js"],"sourcesContent":["// Define Redux actions for employee management\r\n\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\n\r\nconst employeeSlice = createSlice({\r\n  name: 'employee',\r\n  initialState: [],\r\n  reducers: {\r\n    addEmployee: (state, action) => {\r\n      state.push(action.payload);\r\n    },\r\n    // Add other actions as needed\r\n  },\r\n});\r\n\r\nexport const addEmployee = createAction('employee/add');\r\nexport default employeeSlice.reducer;\r\n"],"mappings":"AAAA;;AAEA,SAASA,YAAY,QAAQ,kBAAkB;AAI/C,MAAMC,aAAa,GAAGC,WAAW,CAAC;EAChCC,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC5B;IACA;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMJ,WAAW,GAAGN,YAAY,CAAC,cAAc,CAAC;AACvD,eAAeC,aAAa,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}